// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: comments.proto

package commentsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Базовая модель комментария (плоская; дерево — через parent_id).
type Comment struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"` // Mongo ObjectID
	NewsId        string                 `protobuf:"bytes,2,opt,name=news_id,json=newsId,proto3" json:"news_id,omitempty"`
	ParentId      string                 `protobuf:"bytes,3,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`              // "" - корень
	UserId        string                 `protobuf:"bytes,4,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`                    // из users-service
	Username      string                 `protobuf:"bytes,5,opt,name=username,proto3" json:"username,omitempty"`                              // из users-service
	Content       string                 `protobuf:"bytes,6,opt,name=content,proto3" json:"content,omitempty"`                                // текст (маскируется при is_deleted=true)
	Level         int32                  `protobuf:"varint,7,opt,name=level,proto3" json:"level,omitempty"`                                   // глубина (0 для корня), вычисляется на записи
	RepliesCount  int32                  `protobuf:"varint,8,opt,name=replies_count,json=repliesCount,proto3" json:"replies_count,omitempty"` // счётчик прямых детей (для UI)
	IsDeleted     bool                   `protobuf:"varint,9,opt,name=is_deleted,json=isDeleted,proto3" json:"is_deleted,omitempty"`          // мягкое удаление
	CreatedAt     int64                  `protobuf:"varint,10,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt     int64                  `protobuf:"varint,11,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	ExpiresAt     int64                  `protobuf:"varint,12,opt,name=expires_at,json=expiresAt,proto3" json:"expires_at,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *Comment) Reset() {
	*x = Comment{}
	mi := &file_comments_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Comment) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Comment) ProtoMessage() {}

func (x *Comment) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Comment.ProtoReflect.Descriptor instead.
func (*Comment) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{0}
}

func (x *Comment) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Comment) GetNewsId() string {
	if x != nil {
		return x.NewsId
	}
	return ""
}

func (x *Comment) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *Comment) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *Comment) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *Comment) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

func (x *Comment) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *Comment) GetRepliesCount() int32 {
	if x != nil {
		return x.RepliesCount
	}
	return 0
}

func (x *Comment) GetIsDeleted() bool {
	if x != nil {
		return x.IsDeleted
	}
	return false
}

func (x *Comment) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *Comment) GetUpdatedAt() int64 {
	if x != nil {
		return x.UpdatedAt
	}
	return 0
}

func (x *Comment) GetExpiresAt() int64 {
	if x != nil {
		return x.ExpiresAt
	}
	return 0
}

type CreateCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewsId        string                 `protobuf:"bytes,1,opt,name=news_id,json=newsId,proto3" json:"news_id,omitempty"`
	ParentId      string                 `protobuf:"bytes,2,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"` // опциональный; если задан — это reply
	UserId        string                 `protobuf:"bytes,3,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username      string                 `protobuf:"bytes,4,opt,name=username,proto3" json:"username,omitempty"`
	Content       string                 `protobuf:"bytes,5,opt,name=content,proto3" json:"content,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentRequest) Reset() {
	*x = CreateCommentRequest{}
	mi := &file_comments_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentRequest) ProtoMessage() {}

func (x *CreateCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentRequest.ProtoReflect.Descriptor instead.
func (*CreateCommentRequest) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{1}
}

func (x *CreateCommentRequest) GetNewsId() string {
	if x != nil {
		return x.NewsId
	}
	return ""
}

func (x *CreateCommentRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *CreateCommentRequest) GetUserId() string {
	if x != nil {
		return x.UserId
	}
	return ""
}

func (x *CreateCommentRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *CreateCommentRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

type CreateCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CreateCommentResponse) Reset() {
	*x = CreateCommentResponse{}
	mi := &file_comments_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateCommentResponse) ProtoMessage() {}

func (x *CreateCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateCommentResponse.ProtoReflect.Descriptor instead.
func (*CreateCommentResponse) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{2}
}

func (x *CreateCommentResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type DeleteCommentRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentRequest) Reset() {
	*x = DeleteCommentRequest{}
	mi := &file_comments_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentRequest) ProtoMessage() {}

func (x *DeleteCommentRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentRequest.ProtoReflect.Descriptor instead.
func (*DeleteCommentRequest) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{3}
}

func (x *DeleteCommentRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type DeleteCommentResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *DeleteCommentResponse) Reset() {
	*x = DeleteCommentResponse{}
	mi := &file_comments_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteCommentResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteCommentResponse) ProtoMessage() {}

func (x *DeleteCommentResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteCommentResponse.ProtoReflect.Descriptor instead.
func (*DeleteCommentResponse) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{4}
}

type CommentByIDRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentByIDRequest) Reset() {
	*x = CommentByIDRequest{}
	mi := &file_comments_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentByIDRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentByIDRequest) ProtoMessage() {}

func (x *CommentByIDRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentByIDRequest.ProtoReflect.Descriptor instead.
func (*CommentByIDRequest) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{5}
}

func (x *CommentByIDRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type CommentByIDResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comment       *Comment               `protobuf:"bytes,1,opt,name=comment,proto3" json:"comment,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *CommentByIDResponse) Reset() {
	*x = CommentByIDResponse{}
	mi := &file_comments_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CommentByIDResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CommentByIDResponse) ProtoMessage() {}

func (x *CommentByIDResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CommentByIDResponse.ProtoReflect.Descriptor instead.
func (*CommentByIDResponse) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{6}
}

func (x *CommentByIDResponse) GetComment() *Comment {
	if x != nil {
		return x.Comment
	}
	return nil
}

type ListByNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	NewsId        string                 `protobuf:"bytes,1,opt,name=news_id,json=newsId,proto3" json:"news_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListByNewsRequest) Reset() {
	*x = ListByNewsRequest{}
	mi := &file_comments_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListByNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByNewsRequest) ProtoMessage() {}

func (x *ListByNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByNewsRequest.ProtoReflect.Descriptor instead.
func (*ListByNewsRequest) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{7}
}

func (x *ListByNewsRequest) GetNewsId() string {
	if x != nil {
		return x.NewsId
	}
	return ""
}

func (x *ListByNewsRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListByNewsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListByNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListByNewsResponse) Reset() {
	*x = ListByNewsResponse{}
	mi := &file_comments_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListByNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListByNewsResponse) ProtoMessage() {}

func (x *ListByNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListByNewsResponse.ProtoReflect.Descriptor instead.
func (*ListByNewsResponse) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{8}
}

func (x *ListByNewsResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ListByNewsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type ListRepliesRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	ParentId      string                 `protobuf:"bytes,1,opt,name=parent_id,json=parentId,proto3" json:"parent_id,omitempty"`
	PageSize      int32                  `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	PageToken     string                 `protobuf:"bytes,3,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepliesRequest) Reset() {
	*x = ListRepliesRequest{}
	mi := &file_comments_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepliesRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesRequest) ProtoMessage() {}

func (x *ListRepliesRequest) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesRequest.ProtoReflect.Descriptor instead.
func (*ListRepliesRequest) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{9}
}

func (x *ListRepliesRequest) GetParentId() string {
	if x != nil {
		return x.ParentId
	}
	return ""
}

func (x *ListRepliesRequest) GetPageSize() int32 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *ListRepliesRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListRepliesResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Comments      []*Comment             `protobuf:"bytes,1,rep,name=comments,proto3" json:"comments,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListRepliesResponse) Reset() {
	*x = ListRepliesResponse{}
	mi := &file_comments_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListRepliesResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListRepliesResponse) ProtoMessage() {}

func (x *ListRepliesResponse) ProtoReflect() protoreflect.Message {
	mi := &file_comments_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListRepliesResponse.ProtoReflect.Descriptor instead.
func (*ListRepliesResponse) Descriptor() ([]byte, []int) {
	return file_comments_proto_rawDescGZIP(), []int{10}
}

func (x *ListRepliesResponse) GetComments() []*Comment {
	if x != nil {
		return x.Comments
	}
	return nil
}

func (x *ListRepliesResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

var File_comments_proto protoreflect.FileDescriptor

const file_comments_proto_rawDesc = "" +
	"\n" +
	"\x0ecomments.proto\x12\vcomments.v1\"\xd5\x02\n" +
	"\aComment\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x17\n" +
	"\anews_id\x18\x02 \x01(\tR\x06newsId\x12\x1b\n" +
	"\tparent_id\x18\x03 \x01(\tR\bparentId\x12\x17\n" +
	"\auser_id\x18\x04 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x05 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x06 \x01(\tR\acontent\x12\x14\n" +
	"\x05level\x18\a \x01(\x05R\x05level\x12#\n" +
	"\rreplies_count\x18\b \x01(\x05R\frepliesCount\x12\x1d\n" +
	"\n" +
	"is_deleted\x18\t \x01(\bR\tisDeleted\x12\x1d\n" +
	"\n" +
	"created_at\x18\n" +
	" \x01(\x03R\tcreatedAt\x12\x1d\n" +
	"\n" +
	"updated_at\x18\v \x01(\x03R\tupdatedAt\x12\x1d\n" +
	"\n" +
	"expires_at\x18\f \x01(\x03R\texpiresAt\"\x9b\x01\n" +
	"\x14CreateCommentRequest\x12\x17\n" +
	"\anews_id\x18\x01 \x01(\tR\x06newsId\x12\x1b\n" +
	"\tparent_id\x18\x02 \x01(\tR\bparentId\x12\x17\n" +
	"\auser_id\x18\x03 \x01(\tR\x06userId\x12\x1a\n" +
	"\busername\x18\x04 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x05 \x01(\tR\acontent\"G\n" +
	"\x15CreateCommentResponse\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.comments.v1.CommentR\acomment\"&\n" +
	"\x14DeleteCommentRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"\x17\n" +
	"\x15DeleteCommentResponse\"$\n" +
	"\x12CommentByIDRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"E\n" +
	"\x13CommentByIDResponse\x12.\n" +
	"\acomment\x18\x01 \x01(\v2\x14.comments.v1.CommentR\acomment\"h\n" +
	"\x11ListByNewsRequest\x12\x17\n" +
	"\anews_id\x18\x01 \x01(\tR\x06newsId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"n\n" +
	"\x12ListByNewsResponse\x120\n" +
	"\bcomments\x18\x01 \x03(\v2\x14.comments.v1.CommentR\bcomments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\"m\n" +
	"\x12ListRepliesRequest\x12\x1b\n" +
	"\tparent_id\x18\x01 \x01(\tR\bparentId\x12\x1b\n" +
	"\tpage_size\x18\x02 \x01(\x05R\bpageSize\x12\x1d\n" +
	"\n" +
	"page_token\x18\x03 \x01(\tR\tpageToken\"o\n" +
	"\x13ListRepliesResponse\x120\n" +
	"\bcomments\x18\x01 \x03(\v2\x14.comments.v1.CommentR\bcomments\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken2\xb4\x03\n" +
	"\x0fCommentsService\x12V\n" +
	"\rCreateComment\x12!.comments.v1.CreateCommentRequest\x1a\".comments.v1.CreateCommentResponse\x12V\n" +
	"\rDeleteComment\x12!.comments.v1.DeleteCommentRequest\x1a\".comments.v1.DeleteCommentResponse\x12P\n" +
	"\vCommentByID\x12\x1f.comments.v1.CommentByIDRequest\x1a .comments.v1.CommentByIDResponse\x12M\n" +
	"\n" +
	"ListByNews\x12\x1e.comments.v1.ListByNewsRequest\x1a\x1f.comments.v1.ListByNewsResponse\x12P\n" +
	"\vListReplies\x12\x1f.comments.v1.ListRepliesRequest\x1a .comments.v1.ListRepliesResponseBGZEgithub.com/pribylovaa/go-news-aggregator/proto/comments/v1;commentsv1b\x06proto3"

var (
	file_comments_proto_rawDescOnce sync.Once
	file_comments_proto_rawDescData []byte
)

func file_comments_proto_rawDescGZIP() []byte {
	file_comments_proto_rawDescOnce.Do(func() {
		file_comments_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_comments_proto_rawDesc), len(file_comments_proto_rawDesc)))
	})
	return file_comments_proto_rawDescData
}

var file_comments_proto_msgTypes = make([]protoimpl.MessageInfo, 11)
var file_comments_proto_goTypes = []any{
	(*Comment)(nil),               // 0: comments.v1.Comment
	(*CreateCommentRequest)(nil),  // 1: comments.v1.CreateCommentRequest
	(*CreateCommentResponse)(nil), // 2: comments.v1.CreateCommentResponse
	(*DeleteCommentRequest)(nil),  // 3: comments.v1.DeleteCommentRequest
	(*DeleteCommentResponse)(nil), // 4: comments.v1.DeleteCommentResponse
	(*CommentByIDRequest)(nil),    // 5: comments.v1.CommentByIDRequest
	(*CommentByIDResponse)(nil),   // 6: comments.v1.CommentByIDResponse
	(*ListByNewsRequest)(nil),     // 7: comments.v1.ListByNewsRequest
	(*ListByNewsResponse)(nil),    // 8: comments.v1.ListByNewsResponse
	(*ListRepliesRequest)(nil),    // 9: comments.v1.ListRepliesRequest
	(*ListRepliesResponse)(nil),   // 10: comments.v1.ListRepliesResponse
}
var file_comments_proto_depIdxs = []int32{
	0,  // 0: comments.v1.CreateCommentResponse.comment:type_name -> comments.v1.Comment
	0,  // 1: comments.v1.CommentByIDResponse.comment:type_name -> comments.v1.Comment
	0,  // 2: comments.v1.ListByNewsResponse.comments:type_name -> comments.v1.Comment
	0,  // 3: comments.v1.ListRepliesResponse.comments:type_name -> comments.v1.Comment
	1,  // 4: comments.v1.CommentsService.CreateComment:input_type -> comments.v1.CreateCommentRequest
	3,  // 5: comments.v1.CommentsService.DeleteComment:input_type -> comments.v1.DeleteCommentRequest
	5,  // 6: comments.v1.CommentsService.CommentByID:input_type -> comments.v1.CommentByIDRequest
	7,  // 7: comments.v1.CommentsService.ListByNews:input_type -> comments.v1.ListByNewsRequest
	9,  // 8: comments.v1.CommentsService.ListReplies:input_type -> comments.v1.ListRepliesRequest
	2,  // 9: comments.v1.CommentsService.CreateComment:output_type -> comments.v1.CreateCommentResponse
	4,  // 10: comments.v1.CommentsService.DeleteComment:output_type -> comments.v1.DeleteCommentResponse
	6,  // 11: comments.v1.CommentsService.CommentByID:output_type -> comments.v1.CommentByIDResponse
	8,  // 12: comments.v1.CommentsService.ListByNews:output_type -> comments.v1.ListByNewsResponse
	10, // 13: comments.v1.CommentsService.ListReplies:output_type -> comments.v1.ListRepliesResponse
	9,  // [9:14] is the sub-list for method output_type
	4,  // [4:9] is the sub-list for method input_type
	4,  // [4:4] is the sub-list for extension type_name
	4,  // [4:4] is the sub-list for extension extendee
	0,  // [0:4] is the sub-list for field type_name
}

func init() { file_comments_proto_init() }
func file_comments_proto_init() {
	if File_comments_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_comments_proto_rawDesc), len(file_comments_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   11,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_comments_proto_goTypes,
		DependencyIndexes: file_comments_proto_depIdxs,
		MessageInfos:      file_comments_proto_msgTypes,
	}.Build()
	File_comments_proto = out.File
	file_comments_proto_goTypes = nil
	file_comments_proto_depIdxs = nil
}
