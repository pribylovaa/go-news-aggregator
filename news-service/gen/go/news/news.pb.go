// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.7
// 	protoc        v5.29.3
// source: news.proto

package newsv1

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type ListNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"`
	PageToken     string                 `protobuf:"bytes,2,opt,name=page_token,json=pageToken,proto3" json:"page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNewsRequest) Reset() {
	*x = ListNewsRequest{}
	mi := &file_news_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsRequest) ProtoMessage() {}

func (x *ListNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_news_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsRequest.ProtoReflect.Descriptor instead.
func (*ListNewsRequest) Descriptor() ([]byte, []int) {
	return file_news_proto_rawDescGZIP(), []int{0}
}

func (x *ListNewsRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

func (x *ListNewsRequest) GetPageToken() string {
	if x != nil {
		return x.PageToken
	}
	return ""
}

type ListNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Items         []*News                `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	NextPageToken string                 `protobuf:"bytes,2,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ListNewsResponse) Reset() {
	*x = ListNewsResponse{}
	mi := &file_news_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ListNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ListNewsResponse) ProtoMessage() {}

func (x *ListNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ListNewsResponse.ProtoReflect.Descriptor instead.
func (*ListNewsResponse) Descriptor() ([]byte, []int) {
	return file_news_proto_rawDescGZIP(), []int{1}
}

func (x *ListNewsResponse) GetItems() []*News {
	if x != nil {
		return x.Items
	}
	return nil
}

func (x *ListNewsResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

type GetNewsRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsRequest) Reset() {
	*x = GetNewsRequest{}
	mi := &file_news_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsRequest) ProtoMessage() {}

func (x *GetNewsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_news_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsRequest.ProtoReflect.Descriptor instead.
func (*GetNewsRequest) Descriptor() ([]byte, []int) {
	return file_news_proto_rawDescGZIP(), []int{2}
}

func (x *GetNewsRequest) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

type GetNewsResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Item          *News                  `protobuf:"bytes,1,opt,name=item,proto3" json:"item,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *GetNewsResponse) Reset() {
	*x = GetNewsResponse{}
	mi := &file_news_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetNewsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetNewsResponse) ProtoMessage() {}

func (x *GetNewsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_news_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetNewsResponse.ProtoReflect.Descriptor instead.
func (*GetNewsResponse) Descriptor() ([]byte, []int) {
	return file_news_proto_rawDescGZIP(), []int{3}
}

func (x *GetNewsResponse) GetItem() *News {
	if x != nil {
		return x.Item
	}
	return nil
}

type News struct {
	state            protoimpl.MessageState `protogen:"open.v1"`
	Id               string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Title            string                 `protobuf:"bytes,2,opt,name=title,proto3" json:"title,omitempty"`
	Category         string                 `protobuf:"bytes,3,opt,name=category,proto3" json:"category,omitempty"`
	ShortDescription string                 `protobuf:"bytes,4,opt,name=short_description,json=shortDescription,proto3" json:"short_description,omitempty"`
	LongDescription  string                 `protobuf:"bytes,5,opt,name=long_description,json=longDescription,proto3" json:"long_description,omitempty"`
	Link             string                 `protobuf:"bytes,6,opt,name=link,proto3" json:"link,omitempty"`
	ImageUrl         string                 `protobuf:"bytes,7,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	PublishedAt      int64                  `protobuf:"varint,8,opt,name=published_at,json=publishedAt,proto3" json:"published_at,omitempty"`
	FetchedAt        int64                  `protobuf:"varint,9,opt,name=fetched_at,json=fetchedAt,proto3" json:"fetched_at,omitempty"`
	unknownFields    protoimpl.UnknownFields
	sizeCache        protoimpl.SizeCache
}

func (x *News) Reset() {
	*x = News{}
	mi := &file_news_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *News) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*News) ProtoMessage() {}

func (x *News) ProtoReflect() protoreflect.Message {
	mi := &file_news_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use News.ProtoReflect.Descriptor instead.
func (*News) Descriptor() ([]byte, []int) {
	return file_news_proto_rawDescGZIP(), []int{4}
}

func (x *News) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *News) GetTitle() string {
	if x != nil {
		return x.Title
	}
	return ""
}

func (x *News) GetCategory() string {
	if x != nil {
		return x.Category
	}
	return ""
}

func (x *News) GetShortDescription() string {
	if x != nil {
		return x.ShortDescription
	}
	return ""
}

func (x *News) GetLongDescription() string {
	if x != nil {
		return x.LongDescription
	}
	return ""
}

func (x *News) GetLink() string {
	if x != nil {
		return x.Link
	}
	return ""
}

func (x *News) GetImageUrl() string {
	if x != nil {
		return x.ImageUrl
	}
	return ""
}

func (x *News) GetPublishedAt() int64 {
	if x != nil {
		return x.PublishedAt
	}
	return 0
}

func (x *News) GetFetchedAt() int64 {
	if x != nil {
		return x.FetchedAt
	}
	return 0
}

var File_news_proto protoreflect.FileDescriptor

const file_news_proto_rawDesc = "" +
	"\n" +
	"\n" +
	"news.proto\x12\x04news\"F\n" +
	"\x0fListNewsRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\x12\x1d\n" +
	"\n" +
	"page_token\x18\x02 \x01(\tR\tpageToken\"\\\n" +
	"\x10ListNewsResponse\x12 \n" +
	"\x05items\x18\x01 \x03(\v2\n" +
	".news.NewsR\x05items\x12&\n" +
	"\x0fnext_page_token\x18\x02 \x01(\tR\rnextPageToken\" \n" +
	"\x0eGetNewsRequest\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\"1\n" +
	"\x0fGetNewsResponse\x12\x1e\n" +
	"\x04item\x18\x01 \x01(\v2\n" +
	".news.NewsR\x04item\"\x93\x02\n" +
	"\x04News\x12\x0e\n" +
	"\x02id\x18\x01 \x01(\tR\x02id\x12\x14\n" +
	"\x05title\x18\x02 \x01(\tR\x05title\x12\x1a\n" +
	"\bcategory\x18\x03 \x01(\tR\bcategory\x12+\n" +
	"\x11short_description\x18\x04 \x01(\tR\x10shortDescription\x12)\n" +
	"\x10long_description\x18\x05 \x01(\tR\x0flongDescription\x12\x12\n" +
	"\x04link\x18\x06 \x01(\tR\x04link\x12\x1b\n" +
	"\timage_url\x18\a \x01(\tR\bimageUrl\x12!\n" +
	"\fpublished_at\x18\b \x01(\x03R\vpublishedAt\x12\x1d\n" +
	"\n" +
	"fetched_at\x18\t \x01(\x03R\tfetchedAt2\x80\x01\n" +
	"\vNewsService\x129\n" +
	"\bListNews\x12\x15.news.ListNewsRequest\x1a\x16.news.ListNewsResponse\x126\n" +
	"\aGetNews\x12\x14.news.GetNewsRequest\x1a\x15.news.GetNewsResponseB\x15Z\x13/gen/go/news;newsv1b\x06proto3"

var (
	file_news_proto_rawDescOnce sync.Once
	file_news_proto_rawDescData []byte
)

func file_news_proto_rawDescGZIP() []byte {
	file_news_proto_rawDescOnce.Do(func() {
		file_news_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_news_proto_rawDesc), len(file_news_proto_rawDesc)))
	})
	return file_news_proto_rawDescData
}

var file_news_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_news_proto_goTypes = []any{
	(*ListNewsRequest)(nil),  // 0: news.ListNewsRequest
	(*ListNewsResponse)(nil), // 1: news.ListNewsResponse
	(*GetNewsRequest)(nil),   // 2: news.GetNewsRequest
	(*GetNewsResponse)(nil),  // 3: news.GetNewsResponse
	(*News)(nil),             // 4: news.News
}
var file_news_proto_depIdxs = []int32{
	4, // 0: news.ListNewsResponse.items:type_name -> news.News
	4, // 1: news.GetNewsResponse.item:type_name -> news.News
	0, // 2: news.NewsService.ListNews:input_type -> news.ListNewsRequest
	2, // 3: news.NewsService.GetNews:input_type -> news.GetNewsRequest
	1, // 4: news.NewsService.ListNews:output_type -> news.ListNewsResponse
	3, // 5: news.NewsService.GetNews:output_type -> news.GetNewsResponse
	4, // [4:6] is the sub-list for method output_type
	2, // [2:4] is the sub-list for method input_type
	2, // [2:2] is the sub-list for extension type_name
	2, // [2:2] is the sub-list for extension extendee
	0, // [0:2] is the sub-list for field type_name
}

func init() { file_news_proto_init() }
func file_news_proto_init() {
	if File_news_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_news_proto_rawDesc), len(file_news_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_news_proto_goTypes,
		DependencyIndexes: file_news_proto_depIdxs,
		MessageInfos:      file_news_proto_msgTypes,
	}.Build()
	File_news_proto = out.File
	file_news_proto_goTypes = nil
	file_news_proto_depIdxs = nil
}
