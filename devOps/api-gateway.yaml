apiVersion: v1
kind: Namespace
metadata:
  name: api-gateway
  labels:
    env: dev
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
  namespace: api-gateway
data:
  config.yaml: |
    env: "dev"

    http:
      host: "0.0.0.0"
      port: "50090"

    metrics:
      host: "0.0.0.0"
      port: "50085"
    
    grpc:
      auth_addr: "auth-service.auth.svc.cluster.local:50051"
      news_addr: "news-service.news.svc.cluster.local:50052"
      users_addr: "users-service.users.svc.cluster.local:50053"
      comments_addr: "comments-service.comments.svc.cluster.local:50054"

    timeouts:
      service: 5s
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
  namespace: api-gateway
  labels:
    app: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: ghcr.io/pribylovaa/go-news-aggregator/api-gateway:sha-ea7f53f@sha256:5842913a94658b6673947e6dc1feb4724404fcbf0efed99d014e4d8faf628542
          imagePullPolicy: IfNotPresent
          ports:
            - name: http
              containerPort: 50090
            - name: metrics
              containerPort: 50085
          env:
            - name: CONFIG_PATH
              value: /config/config.yaml
          readinessProbe:
            tcpSocket:
              port: 50090
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 2
            failureThreshold: 3
          livenessProbe:
            tcpSocket:
              port: 50090
            initialDelaySeconds: 10
            periodSeconds: 15
            timeoutSeconds: 2
            failureThreshold: 3
          resources:
            requests:
              cpu: 100m
              memory: 128Mi
            limits:
              cpu: 300m
              memory: 256Mi
          volumeMounts:
            - name: gateway-config
              mountPath: /config
              readOnly: true
      volumes:
        - name: gateway-config
          configMap:
            name: api-gateway-config
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
  namespace: api-gateway
  labels:
    app: api-gateway
spec:
  type: ClusterIP
  selector:
    app: api-gateway
  ports:
    - name: http
      port: 50090
      targetPort: http
      protocol: TCP
    - name: metrics
      port: 50085
      targetPort: metrics
      protocol: TCP
---
apiVersion: monitoring.coreos.com/v1
kind: ServiceMonitor
metadata:
  name: api-gateway
  namespace: api-gateway
  labels:
    app: api-gateway
    release: mon
spec:
  selector:
    matchLabels:
      app: api-gateway
  namespaceSelector:
    matchNames:
      - api-gateway
  endpoints:
    - port: metrics
      path: /metrics
      interval: 15s
      scrapeTimeout: 5s
---
apiVersion: networking.k8s.io/v1
kind: NetworkPolicy
metadata:
  name: api-gateway-ingress
  namespace: api-gateway
spec:
  podSelector:
    matchLabels:
      app: api-gateway
  policyTypes:
    - Ingress
  ingress:
    - ports:
        - port: 50090
          protocol: TCP
    - from:
        - namespaceSelector:
            matchLabels:
              kubernetes.io/metadata.name: "monitoring"
          podSelector:
            matchLabels:
              app.kubernetes.io/name: prometheus
      ports:
        - port: 50085
          protocol: TCP

