apiVersion: apps/v1
kind: Deployment
metadata:
  name: users-service
  namespace: news
  labels:
    app.kubernetes.io/name: users-service
    app.kubernetes.io/part-of: go-news-aggregator
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 0
      maxSurge: 1
  selector:
    matchLabels:
      app.kubernetes.io/name: users-service
  template:
    metadata:
      labels:
        app.kubernetes.io/name: users-service
      annotations:
        prometheus.io/scrape: "true"
        prometheus.io/port: "50083"
        prometheus.io/path: "/metrics"
    spec:
      serviceAccountName: users-service
      securityContext:
        runAsNonRoot: true
      containers:
      - name: app
        image: ghcr.io/<org>/go-news-aggregator/users-service:latest
        imagePullPolicy: IfNotPresent
        args: ["--config=/etc/users/config.yaml"]  
        env:
          - name: CONFIG_PATH
            value: "/etc/users/config.yaml"
          - name: POSTGRES
            valueFrom: { secretKeyRef: { name: users-secrets, key: POSTGRES } }
          - name: S3_ROOT_USER
            valueFrom: { secretKeyRef: { name: users-secrets, key: S3_ROOT_USER } }
          - name: S3_ROOT_PASSWORD
            valueFrom: { secretKeyRef: { name: users-secrets, key: S3_ROOT_PASSWORD } }
          - name: ENV
            value: "dev"
        ports:
          - name: grpc
            containerPort: 50053
          - name: http
            containerPort: 50083
        readinessProbe:
          httpGet:
            path: /healthz
            port: http
          initialDelaySeconds: 3
          periodSeconds: 5
          timeoutSeconds: 2
          failureThreshold: 3
        livenessProbe:
          httpGet:
            path: /livez
            port: http
          initialDelaySeconds: 5
          periodSeconds: 10
          timeoutSeconds: 2
          failureThreshold: 3
        resources:
          requests:
            cpu: 50m
            memory: 64Mi
          limits:
            cpu: 500m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: true
          capabilities:
            drop: ["ALL"]
        volumeMounts:
          - name: config
            mountPath: /etc/users
            readOnly: true
      volumes:
        - name: config
          configMap:
            name: users-config
            items:
              - key: config.yaml
                path: config.yaml
